//NOI 08 - nPrime
/*
  I just used the Sieve algorithm.
*/
#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef vector<long long int> vll;

int n;
ll sieve_size;
bitset<10000010> bs;
vll primes;

void sieve(ll upperbound){

        sieve_size = upperbound+1;
        bs.set();

        bs[0] = bs[1] = 0;

        for(ll i =2; i<sieve_size; i++) if(bs[i]){

                for(ll j = i*i; j<=sieve_size; j+=i) bs[j] = 0;
                primes.push_back(i);

        }

}

ll Prime(ll N){

        int qtd = 0;
        for(ll i=2; i<sieve_size; i++){
                if(bs[i]) qtd++;
                if(qtd == N) return i;
        }
        return -1;
}

int main(){
    sieve(1000000);
    cin >> n;
    printf("%lld\n", Prime(n));
    return 0;
}
